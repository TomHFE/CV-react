{"ast":null,"code":"var _jsxFileName = \"/Users/tomengland/cv/src/RandomColor.jsx\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RandomColor() {\n  // let randomNumber = Math.round(Math.random() * 10);\n  // console.log(randomNumber);\n  let word = \"hello world the world the world the world\";\n  let wordArr = word.split(\" \");\n  // console.log(wordArr.split(\"\"));\n\n  let finalWord = wordArr.forEach(el => {\n    // el.target.style.color = \"orange\";\n    el.join(\" \");\n    return el;\n\n    // return <span>{lel.toString()}</span>;\n  });\n\n  console.log(finalWord);\n  // let blah = finalWord\n  //   .map((words) => {\n  //     return words.push(\" \").toString();\n  //   })\n  //   .join(\" \");\n  // console.log(blah);\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"h\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      id: \"finalWord\",\n      children: finalWord\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n  // let finalWord = midWord.join();\n  // return <h2>{finalWord}</h2>;\n\n  // let changedWord = word.map((el) => {\n  //   el.style.color = \"orange\";\n  // });\n  // return <h2> {changedWord}</h2>;\n}\n_c = RandomColor;\nvar _c;\n$RefreshReg$(_c, \"RandomColor\");","map":{"version":3,"names":["RandomColor","word","wordArr","split","finalWord","forEach","el","join","console","log"],"sources":["/Users/tomengland/cv/src/RandomColor.jsx"],"sourcesContent":["export default function RandomColor() {\n  // let randomNumber = Math.round(Math.random() * 10);\n  // console.log(randomNumber);\n  let word = \"hello world the world the world the world\";\n  let wordArr = word.split(\" \");\n  // console.log(wordArr.split(\"\"));\n\n  let finalWord = wordArr.forEach((el) => {\n    // el.target.style.color = \"orange\";\n    el.join(\" \");\n    return el;\n\n    // return <span>{lel.toString()}</span>;\n  });\n  console.log(finalWord);\n  // let blah = finalWord\n  //   .map((words) => {\n  //     return words.push(\" \").toString();\n  //   })\n  //   .join(\" \");\n  // console.log(blah);\n\n  return (\n    <div>\n      <h1>h</h1>\n      <h2 id=\"finalWord\">{finalWord}</h2>\n    </div>\n  );\n  // let finalWord = midWord.join();\n  // return <h2>{finalWord}</h2>;\n\n  // let changedWord = word.map((el) => {\n  //   el.style.color = \"orange\";\n  // });\n  // return <h2> {changedWord}</h2>;\n}\n"],"mappings":";;AAAA,eAAe,SAASA,WAAW,GAAG;EACpC;EACA;EACA,IAAIC,IAAI,GAAG,2CAA2C;EACtD,IAAIC,OAAO,GAAGD,IAAI,CAACE,KAAK,CAAC,GAAG,CAAC;EAC7B;;EAEA,IAAIC,SAAS,GAAGF,OAAO,CAACG,OAAO,CAAEC,EAAE,IAAK;IACtC;IACAA,EAAE,CAACC,IAAI,CAAC,GAAG,CAAC;IACZ,OAAOD,EAAE;;IAET;EACF,CAAC,CAAC;;EACFE,OAAO,CAACC,GAAG,CAACL,SAAS,CAAC;EACtB;EACA;EACA;EACA;EACA;EACA;;EAEA,oBACE;IAAA,wBACE;MAAA,UAAI;IAAC;MAAA;MAAA;MAAA;IAAA,QAAK,eACV;MAAI,EAAE,EAAC,WAAW;MAAA,UAAEA;IAAS;MAAA;MAAA;MAAA;IAAA,QAAM;EAAA;IAAA;IAAA;IAAA;EAAA,QAC/B;EAER;EACA;;EAEA;EACA;EACA;EACA;AACF;AAAC,KAnCuBJ,WAAW;AAAA;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}